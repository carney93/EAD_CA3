// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Copify.Pages
{
    #line hidden
    using System;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/graham/Projects/BlazorApp1/BlazorApp1/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/graham/Projects/BlazorApp1/BlazorApp1/_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/graham/Projects/BlazorApp1/BlazorApp1/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/graham/Projects/BlazorApp1/BlazorApp1/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/graham/Projects/BlazorApp1/BlazorApp1/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/graham/Projects/BlazorApp1/BlazorApp1/_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/graham/Projects/BlazorApp1/BlazorApp1/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/graham/Projects/BlazorApp1/BlazorApp1/_Imports.razor"
using Copify;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/graham/Projects/BlazorApp1/BlazorApp1/_Imports.razor"
using Copify.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/graham/Projects/BlazorApp1/BlazorApp1/Pages/SearchArtist.razor"
using System.Runtime.Serialization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/graham/Projects/BlazorApp1/BlazorApp1/Pages/SearchArtist.razor"
using System.Collections;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/graham/Projects/BlazorApp1/BlazorApp1/Pages/SearchArtist.razor"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/graham/Projects/BlazorApp1/BlazorApp1/Pages/SearchArtist.razor"
using System.ComponentModel.DataAnnotations;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/searchartist")]
    public partial class SearchArtist : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 107 "/Users/graham/Projects/BlazorApp1/BlazorApp1/Pages/SearchArtist.razor"
       

    [Required]
    private String artist = "Led Zeppelin";
    private bool found;
    private Root data;
    private Application data1;
    List<string> similarArtists = new List<string>();

    private int noAlbums;
    ArrayList artistAlbums = new ArrayList();
    private int noSimilarArtists;



    private async Task GetArtistAsync()
    {
        try
        {
            string url = "http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=" + artist + "&api_key=e53ad041fac5d3189f2e8dffe9b6978a&format=json";
            data = await Http.GetFromJsonAsync<Root>(url);

            string url1 = "http://ws.audioscrobbler.com/2.0/?method=artist.gettopalbums&artist=" + artist + "&api_key=e53ad041fac5d3189f2e8dffe9b6978a&format=json";
            data1 = await Http.GetFromJsonAsync<Application>(url1);

            noAlbums = data1.topalbums.album.Count;
            noSimilarArtists = data.artist.similar.artist.Count;

            artistAlbums.Clear();
            similarArtists.Clear();

            

#line default
#line hidden
#nullable disable
#nullable restore
#line 138 "/Users/graham/Projects/BlazorApp1/BlazorApp1/Pages/SearchArtist.razor"
             for (int i = 0; i < noAlbums; i++)
            {
                artistAlbums.Add(data1.topalbums.album[i].name);

            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 142 "/Users/graham/Projects/BlazorApp1/BlazorApp1/Pages/SearchArtist.razor"
             

            found = true;
        }
        catch (Exception e)
        {
            found = false;
        }
    }

    //lifecycle method


    protected override async Task OnInitializedAsync()
    {
        await GetArtistAsync();
    }

    //sort release list by alphabet
    public void sort()
    {
        artistAlbums.Sort();
    }

    //lookup
    public async void Lookup()
    {
        await GetArtistAsync();
        StateHasChanged();
    }

    public async void goToSimilarArtist(int loc)
    {
        artist = similarArtists[loc];
        await GetArtistAsync();
        StateHasChanged();
    }


    [DataContract]
    public class Image
    {
        [DataMember(Name = "#text")]
        public string text { get; set; }
        public string size { get; set; }
    }

    public class Stats
    {
        public string listeners { get; set; }
        public string playcount { get; set; }
    }

    public class Similar
    {
        public IList<Artist> artist { get; set; }
    }

    public class Tag
    {
        public string name { get; set; }
        public string url { get; set; }
    }

    public class Tags
    {
        public IList<Tag> tag { get; set; }
    }

    [DataContract]
    public class Link
    {
        [DataMember(Name = "#text")]
        public string text { get; set; }
        public string rel { get; set; }
        public string href { get; set; }
    }

    public class Links
    {
        public Link link { get; set; }
    }

    public class Bio
    {
        public Links links { get; set; }
        public string published { get; set; }
        public string summary { get; set; }
        public string content { get; set; }
    }

    public class Artist
    {
        public string name { get; set; }
        public string mbid { get; set; }
        public string url { get; set; }
        public IList<Image> image { get; set; }
        public string streamable { get; set; }
        public string ontour { get; set; }
        public Stats stats { get; set; }
        public Similar similar { get; set; }
        public Tags tags { get; set; }
        public Bio bio { get; set; }
    }

    public class Root
    {
        public Artist artist { get; set; }
    }


    //albums

    public class Album
    {
        public string name { get; set; }
        public int playcount { get; set; }
        public string mbid { get; set; }
        public string url { get; set; }
        public Artist artist { get; set; }
        public IList<Image> image { get; set; }

    }
    public class Attr
    {
        public string artist { get; set; }
        public string page { get; set; }
        public string perPage { get; set; }
        public string totalPages { get; set; }
        public string total { get; set; }

    }
    public class Topalbums
    {
        public IList<Album> album { get; set; }
        public Attr @attr { get; set; }

    }
    public class Application
    {
        public Topalbums topalbums { get; set; }

    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
